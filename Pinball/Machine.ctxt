#BlueJ class context
comment0.params=
comment0.target=Machine()
comment0.text=\r\n\ Create\ a\ machine\ with\ default\ name\ and\ size\r\n
comment1.params=name\ rightEdge\ bottomEdge
comment1.target=Machine(java.lang.String,\ int,\ int)
comment1.text=\r\n\ \ Create\ a\ machine\ with\ given\ name\ and\ size.\r\n\ \ \r\n\ \ @param\ name\ The\ name\ to\ give\ the\ machine.\r\n\ \ @param\ rightEdge\ The\ maximum\ x\ coordinate.\r\n\ \ @param\ bottomEdge\ The\ maximum\ y\ coordinate.\r\n
comment10.params=
comment10.target=int\ getBottomWall()
comment10.text=\r\n\ Return\ the\ edge\ of\ the\ bottom\ wall.\r\n\ \r\n\ @return\ Return\ the\ interior\ edge\ of\ the\ bottom\ wall.\r\n
comment11.params=
comment11.target=int\ getGapLeftX()
comment11.text=\r\n\ Return\ X\ position\ that\ is\ the\ edge\ of\ the\ gap\ on\ the\ left\ hand\ side.\r\n\ \r\n\ @return\ Return\ X\ position\ of\ the\ left\ hand\ side\ of\ the\ gap.\r\n
comment12.params=
comment12.target=int\ getGapRightX()
comment12.text=\r\n\ Return\ x\ position\ that\ is\ the\ edge\ of\ the\ gap\ on\ the\ right\ hand\ side.\r\n\ \r\n\ @return\ Return\ X\ position\ of\ the\ right\ hand\ side\ of\ the\ gap.\r\n
comment13.params=
comment13.target=void\ pauseMachine()
comment13.text=\r\n\ Introduces\ a\ small\ delay\ in\ ball\ movement,\ for\ smooth\ running.\r\n
comment14.params=
comment14.target=void\ resetMachine()
comment14.text=\r\n\ Resets\ the\ machine\ back\ to\ initial\ view,\ with\ no\ pinballs.\r\n
comment15.params=
comment15.target=void\ displayScore()
comment15.text=\r\n\ Set\ the\ canvas\ to\ black\ and\ then\ draw\ the\ final\ scores\ for\ each\ ball.\r\n
comment16.params=onoff
comment16.target=void\ setBallCollisionsOn(boolean)
comment16.text=\r\n\ Set\ if\ balls\ will\ collied\ in\ the\ simulation\ or\ pass\ through\ eachother.\r\n\ \r\n\ @param\ true\ false\ for\ enabeling\ collisions.\r\n
comment2.params=pinballObj
comment2.target=void\ erase(PinballObject)
comment2.text=\r\n\ Erase\ a\ PinballObject\ from\ the\ view\ of\ the\ pinball\ machine.\r\n\ \r\n\ @param\ pinballObj\ The\ object\ to\ be\ erased.\r\n
comment3.params=pinballObj
comment3.target=void\ draw(PinballObject)
comment3.text=\r\n\ Draw\ a\ PinballObject\ at\ its\ current\ position\ on\ to\ the\ view\ of\ the\ pinball\ machine.\r\n\ \r\n\ @param\ pinballObj\ The\ object\ to\ be\ drawn.\r\n
comment4.params=bmprObj
comment4.target=void\ draw(Bumper)
comment4.text=\r\n\ Draw\ a\ Bumper\ at\ its\ current\ position\ on\ to\ the\ view\ of\ the\ pinball\ machine.\r\n\ \r\n\ @param\ bmprObj\ The\ object\ to\ be\ drawn.\r\n
comment5.params=holeObj
comment5.target=void\ draw(Hole)
comment5.text=\r\n\ Draw\ a\ Hole\ at\ its\ current\ position\ o\ nto\ the\ view\ of\ the\ pinball\ machine.\r\n\ \r\n\ @param\ holeObj\ The\ object\ to\ be\ drawn.\r\n
comment6.params=
comment6.target=void\ drawMachine()
comment6.text=\r\n\ Draw\ the\ edges\ of\ the\ pinball\ machine.\ \r\n
comment7.params=
comment7.target=int\ getLeftWall()
comment7.text=\r\n\ Return\ the\ edge\ of\ the\ left-hand\ wall.\r\n\ \r\n\ @return\ Return\ the\ interior\ edge\ of\ the\ left\ hand\ wall.\r\n
comment8.params=
comment8.target=int\ getRightWall()
comment8.text=\r\n\ Return\ the\ edge\ of\ the\ right-hand\ wall.\r\n\ \r\n\ @return\ Return\ the\ interior\ edge\ of\ the\ right\ hand\ wall.\ \r\n
comment9.params=
comment9.target=int\ getTopWall()
comment9.text=\r\n\ Return\ the\ edge\ of\ the\ top\ wall.\r\n\ \r\n\ @return\ Return\ the\ interior\ edge\ of\ the\ top\ wall.\ \ \ \ \ \r\n
numComments=17
